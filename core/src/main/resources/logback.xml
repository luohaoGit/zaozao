<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<contextName>zaozao</contextName>
	<property scope="context" name="CHARSET" value="utf-8" />
	<property scope="context" name="LOG_HOME" value="/usr/local/zaozao/logs" />
	<property scope="context" name="APP_LOG_HOME" value="${LOG_HOME}/app" />
	<property scope="context" name="DATA_LOG_HOME" value="${LOG_HOME}/data" />
	<property scope="context" name="ERR_LOG_HOME" value="${LOG_HOME}/err" />

	<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
	<!-- 控制台输出格式 -->
	<property scope="context" name="STDOUT_PATTERN" value='%d{yyyy-MM-dd HH:mm:ss.SSS}-[%thread]-[%level]-[%msg]-%C\:%M:%L %ex{full}%n' />
	<!-- 应用输出格式 -->
	<property scope="context" name="APP_PATTERN" value='%d{yyyy-MM-dd HH:mm:ss}|%level|%C\:%M|%L|%thread|"%replace(%.-1024msg){"\n",""}"|"%.-4000ex{10}"%n' />
	<property scope="context" name="DATA_PATTERN" value='%msg%n' />
	<!-- 错误输出格式 -->
	<property scope="context" name="ERR_PATTERN" value='${APP_PATTERN}' />

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<charset>${CHARSET}</charset>
			<pattern>${STDOUT_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- hostname以【lin-】或者【rac(65.11物理机)】开头的机器日志打印到文件 -->
	<if condition='property("HOSTNAME").contains("lin-") || property("HOSTNAME").equals("iZ116ff3d79Z")'>
		<then>
			<appender name="APP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
<!--				<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
					<level>WARN</level>
				</filter>-->
				<file>${APP_LOG_HOME}/${HOSTNAME}.app.ing</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<!--日志文件输出的文件名，按天生成文件名 -->
					<fileNamePattern>${APP_LOG_HOME}/${HOSTNAME}.app.%d{yyyy-MM-dd}.log.%i.zip</fileNamePattern>
					<MaxHistory>60</MaxHistory><!--日志文件保留天数 -->
					<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
						<maxFileSize>30MB</maxFileSize><!-- 按时间回滚的同时，按文件大小来回滚 -->
					</timeBasedFileNamingAndTriggeringPolicy>
				</rollingPolicy>
				<encoder>
					<charset>${CHARSET}</charset>
					<pattern>${APP_PATTERN}</pattern>
				</encoder>
			</appender>

			<appender name="DATA_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${DATA_LOG_HOME}/${HOSTNAME}.data.ing</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${DATA_LOG_HOME}/${HOSTNAME}.data.%d{yyyy-MM-dd_HH-mm}.log.%i</fileNamePattern>
					<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
						<maxFileSize>30MB</maxFileSize>
					</timeBasedFileNamingAndTriggeringPolicy>
				</rollingPolicy>
				<encoder>
					<charset>${CHARSET}</charset>
					<pattern>${DATA_LOG_HOME}</pattern>
				</encoder>
			</appender>

			<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${ERR_LOG_HOME}/${HOSTNAME}.error.ing</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${ERR_LOG_HOME}/${HOSTNAME}.error.%d{yyyy-MM-dd_HH-mm}.log.%i</fileNamePattern>
					<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
						<maxFileSize>30MB</maxFileSize>
					</timeBasedFileNamingAndTriggeringPolicy>
				</rollingPolicy>
				<encoder>
					<charset>${CHARSET}</charset>
					<pattern>${ERR_PATTERN}</pattern>
				</encoder>
			</appender>

			<!-- 线上环境 -->
			<root level="INFO">
				<appender-ref ref="APP_FILE" />
			</root>
			<logger name="ERROR" level="INFO">
				<appender-ref ref="ERROR_FILE" />
			</logger>
			<logger name="DATA" level="INFO">
				<appender-ref ref="DATA_FILE" />
			</logger>
		</then>
		<else>
			<!-- 自测环境 -->
			<root level="INFO">
				<appender-ref ref="STDOUT" />
			</root>
			<logger name="org.springframework.samples.mvc" level="INFO" />
			<logger name="org.springframework.core" level="INFO" />
			<logger name="org.springframework.beans" level="INFO" />
			<logger name="org.springframework.context" level="INFO" />
			<logger name="org.springframework.http" level="DEBUG" />
			<logger name="org.springframework.web" level="DEBUG" />
		</else>
	</if>
</configuration>